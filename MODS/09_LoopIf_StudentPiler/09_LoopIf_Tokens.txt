TokenList:

 TK  Ln Type                      Lexeme         

  0   1:Token: 16: MODULE          MODULE         
  1   1:Token: 35: ID              LoopIf         
  2   1:Token: 54: SEMI_COLON      ;              
  3   3:Token: 5 : CONST           CONST          
  4   4:Token: 35: ID              little         
  5   4:Token: 45: EQUAL           =              
  6   4:Token: 38: INT_NUM         3              
  7   4:Token: 54: SEMI_COLON      ;              
  8   5:Token: 35: ID              hi             
  9   5:Token: 45: EQUAL           =              
 10   5:Token: 38: INT_NUM         7              
 11   5:Token: 54: SEMI_COLON      ;              
 12   6:Token: 35: ID              middle         
 13   6:Token: 45: EQUAL           =              
 14   6:Token: 38: INT_NUM         7              
 15   6:Token: 54: SEMI_COLON      ;              
 16   8:Token: 24: VAR             VAR            
 17   9:Token: 35: ID              good           
 18   9:Token: 42: COMMA           ,              
 19   9:Token: 35: ID              bad            
 20   9:Token: 42: COMMA           ,              
 21   9:Token: 35: ID              ugly           
 22   9:Token: 41: COLON           :              
 23   9:Token: 13: INTEGER         INTEGER        
 24   9:Token: 54: SEMI_COLON      ;              
 25  11:Token: 24: VAR             VAR            
 26  11:Token: 35: ID              k              
 27  11:Token: 42: COMMA           ,              
 28  11:Token: 35: ID              m              
 29  11:Token: 41: COLON           :              
 30  11:Token: 13: INTEGER         INTEGER        
 31  11:Token: 54: SEMI_COLON      ;              
 32  13:Token: 3 : BEGIN           BEGIN          
 33  15:Token: 35: ID              good           
 34  15:Token: 40: ASSIGN          :=             
 35  15:Token: 38: INT_NUM         42             
 36  15:Token: 51: PLUS            +              
 37  15:Token: 38: INT_NUM         7              
 38  15:Token: 48: MINUS           -              
 39  15:Token: 38: INT_NUM         31             
 40  15:Token: 51: PLUS            +              
 41  15:Token: 38: INT_NUM         1              
 42  15:Token: 48: MINUS           -              
 43  15:Token: 38: INT_NUM         14             
 44  15:Token: 54: SEMI_COLON      ;              
 45  17:Token: 34: WRSTR           WRSTR          
 46  17:Token: 47: LEFT_PAREN      (              
 47  17:Token: 39: STRING          Enter 1 and press <return> to start: 
 48  17:Token: 53: RIGHT_PAREN     )              
 49  17:Token: 54: SEMI_COLON      ;              
 50  18:Token: 35: ID              ugly           
 51  18:Token: 40: ASSIGN          :=             
 52  18:Token: 32: RDINT           RDINT          
 53  18:Token: 47: LEFT_PAREN      (              
 54  18:Token: 53: RIGHT_PAREN     )              
 55  18:Token: 54: SEMI_COLON      ;              
 56  20:Token: 14: LOOP            LOOP           
 57  21:Token: 12: IF              IF             
 58  21:Token: 35: ID              ugly           
 59  21:Token: 45: EQUAL           =              
 60  21:Token: 38: INT_NUM         1              
 61  21:Token: 22: THEN            THEN           
 62  21:Token: 10: EXIT            EXIT           
 63  21:Token: 54: SEMI_COLON      ;              
 64  21:Token: 9 : END             END            
 65  21:Token: 54: SEMI_COLON      ;              
 66  22:Token: 34: WRSTR           WRSTR          
 67  22:Token: 47: LEFT_PAREN      (              
 68  22:Token: 39: STRING          Invalid input...Enter 1 and press <return> to start: 
 69  22:Token: 53: RIGHT_PAREN     )              
 70  22:Token: 54: SEMI_COLON      ;              
 71  23:Token: 35: ID              ugly           
 72  23:Token: 40: ASSIGN          :=             
 73  23:Token: 32: RDINT           RDINT          
 74  23:Token: 47: LEFT_PAREN      (              
 75  23:Token: 53: RIGHT_PAREN     )              
 76  23:Token: 54: SEMI_COLON      ;              
 77  24:Token: 9 : END             END            
 78  24:Token: 54: SEMI_COLON      ;              
 79  25:Token: 29: CLS             CLS            
 80  25:Token: 54: SEMI_COLON      ;              
 81  27:Token: 34: WRSTR           WRSTR          
 82  27:Token: 47: LEFT_PAREN      (              
 83  27:Token: 39: STRING          42+7-31+1:           should be 19:          
 84  27:Token: 53: RIGHT_PAREN     )              
 85  27:Token: 54: SEMI_COLON      ;              
 86  28:Token: 27: WRINT           WRINT          
 87  28:Token: 47: LEFT_PAREN      (              
 88  28:Token: 38: INT_NUM         42             
 89  28:Token: 51: PLUS            +              
 90  28:Token: 38: INT_NUM         7              
 91  28:Token: 48: MINUS           -              
 92  28:Token: 38: INT_NUM         31             
 93  28:Token: 51: PLUS            +              
 94  28:Token: 38: INT_NUM         1              
 95  28:Token: 53: RIGHT_PAREN     )              
 96  28:Token: 54: SEMI_COLON      ;              
 97  28:Token: 28: WRLN            WRLN           
 98  28:Token: 54: SEMI_COLON      ;              
 99  30:Token: 34: WRSTR           WRSTR          
100  30:Token: 47: LEFT_PAREN      (              
101  30:Token: 39: STRING          good * little:       should be 15:          
102  30:Token: 53: RIGHT_PAREN     )              
103  30:Token: 54: SEMI_COLON      ;              
104  31:Token: 27: WRINT           WRINT          
105  31:Token: 47: LEFT_PAREN      (              
106  31:Token: 35: ID              good           
107  31:Token: 49: MULT            *              
108  31:Token: 35: ID              little         
109  31:Token: 53: RIGHT_PAREN     )              
110  31:Token: 54: SEMI_COLON      ;              
111  31:Token: 28: WRLN            WRLN           
112  31:Token: 54: SEMI_COLON      ;              
113  33:Token: 34: WRSTR           WRSTR          
114  33:Token: 47: LEFT_PAREN      (              
115  33:Token: 39: STRING          42000 DIV 4200:      should be 10:          
116  33:Token: 53: RIGHT_PAREN     )              
117  33:Token: 54: SEMI_COLON      ;              
118  34:Token: 27: WRINT           WRINT          
119  34:Token: 47: LEFT_PAREN      (              
120  34:Token: 38: INT_NUM         42000          
121  34:Token: 6 : DIV             DIV            
122  34:Token: 38: INT_NUM         4200           
123  34:Token: 53: RIGHT_PAREN     )              
124  34:Token: 54: SEMI_COLON      ;              
125  34:Token: 28: WRLN            WRLN           
126  34:Token: 54: SEMI_COLON      ;              
127  36:Token: 34: WRSTR           WRSTR          
128  36:Token: 47: LEFT_PAREN      (              
129  36:Token: 39: STRING          42042 MOD 100:       should be 42:          
130  36:Token: 53: RIGHT_PAREN     )              
131  36:Token: 54: SEMI_COLON      ;              
132  37:Token: 27: WRINT           WRINT          
133  37:Token: 47: LEFT_PAREN      (              
134  37:Token: 38: INT_NUM         42042          
135  37:Token: 15: MOD             MOD            
136  37:Token: 38: INT_NUM         100            
137  37:Token: 53: RIGHT_PAREN     )              
138  37:Token: 54: SEMI_COLON      ;              
139  37:Token: 28: WRLN            WRLN           
140  37:Token: 54: SEMI_COLON      ;              
141  39:Token: 34: WRSTR           WRSTR          
142  39:Token: 47: LEFT_PAREN      (              
143  39:Token: 39: STRING          20000 * 21000:       should be 420,000,000: 
144  39:Token: 53: RIGHT_PAREN     )              
145  39:Token: 54: SEMI_COLON      ;              
146  40:Token: 27: WRINT           WRINT          
147  40:Token: 47: LEFT_PAREN      (              
148  40:Token: 38: INT_NUM         20000          
149  40:Token: 49: MULT            *              
150  40:Token: 38: INT_NUM         21000          
151  40:Token: 53: RIGHT_PAREN     )              
152  40:Token: 54: SEMI_COLON      ;              
153  40:Token: 28: WRLN            WRLN           
154  40:Token: 54: SEMI_COLON      ;              
155  42:Token: 34: WRSTR           WRSTR          
156  42:Token: 47: LEFT_PAREN      (              
157  42:Token: 39: STRING          6*7+2*little-1:      should be 47:          
158  42:Token: 53: RIGHT_PAREN     )              
159  42:Token: 54: SEMI_COLON      ;              
160  43:Token: 27: WRINT           WRINT          
161  43:Token: 47: LEFT_PAREN      (              
162  43:Token: 38: INT_NUM         6              
163  43:Token: 49: MULT            *              
164  43:Token: 38: INT_NUM         7              
165  43:Token: 51: PLUS            +              
166  43:Token: 38: INT_NUM         2              
167  43:Token: 49: MULT            *              
168  43:Token: 35: ID              little         
169  43:Token: 48: MINUS           -              
170  43:Token: 38: INT_NUM         1              
171  43:Token: 53: RIGHT_PAREN     )              
172  43:Token: 54: SEMI_COLON      ;              
173  43:Token: 28: WRLN            WRLN           
174  43:Token: 54: SEMI_COLON      ;              
175  45:Token: 34: WRSTR           WRSTR          
176  45:Token: 47: LEFT_PAREN      (              
177  45:Token: 39: STRING          6*2+((1+2)*3-1)*2:   should be 28:          
178  45:Token: 53: RIGHT_PAREN     )              
179  45:Token: 54: SEMI_COLON      ;              
180  46:Token: 27: WRINT           WRINT          
181  46:Token: 47: LEFT_PAREN      (              
182  46:Token: 38: INT_NUM         6              
183  46:Token: 49: MULT            *              
184  46:Token: 38: INT_NUM         2              
185  46:Token: 51: PLUS            +              
186  46:Token: 47: LEFT_PAREN      (              
187  46:Token: 47: LEFT_PAREN      (              
188  46:Token: 38: INT_NUM         1              
189  46:Token: 51: PLUS            +              
190  46:Token: 38: INT_NUM         2              
191  46:Token: 53: RIGHT_PAREN     )              
192  46:Token: 49: MULT            *              
193  46:Token: 38: INT_NUM         3              
194  46:Token: 48: MINUS           -              
195  46:Token: 38: INT_NUM         1              
196  46:Token: 53: RIGHT_PAREN     )              
197  46:Token: 49: MULT            *              
198  46:Token: 38: INT_NUM         2              
199  46:Token: 53: RIGHT_PAREN     )              
200  46:Token: 54: SEMI_COLON      ;              
201  46:Token: 28: WRLN            WRLN           
202  46:Token: 54: SEMI_COLON      ;              
203  48:Token: 28: WRLN            WRLN           
204  48:Token: 54: SEMI_COLON      ;              
205  50:Token: 34: WRSTR           WRSTR          
206  50:Token: 47: LEFT_PAREN      (              
207  50:Token: 39: STRING          IF test:             should be  4:          
208  50:Token: 53: RIGHT_PAREN     )              
209  50:Token: 54: SEMI_COLON      ;              
210  51:Token: 35: ID              k              
211  51:Token: 40: ASSIGN          :=             
212  51:Token: 38: INT_NUM         4              
213  51:Token: 54: SEMI_COLON      ;              
214  52:Token: 35: ID              m              
215  52:Token: 40: ASSIGN          :=             
216  52:Token: 38: INT_NUM         3              
217  52:Token: 54: SEMI_COLON      ;              
218  53:Token: 12: IF              IF             
219  53:Token: 35: ID              k              
220  53:Token: 56: GRTR_THAN       >              
221  53:Token: 35: ID              m              
222  53:Token: 22: THEN            THEN           
223  54:Token: 27: WRINT           WRINT          
224  54:Token: 47: LEFT_PAREN      (              
225  54:Token: 35: ID              k              
226  54:Token: 53: RIGHT_PAREN     )              
227  54:Token: 54: SEMI_COLON      ;              
228  55:Token: 28: WRLN            WRLN           
229  55:Token: 54: SEMI_COLON      ;              
230  56:Token: 8 : ELSE            ELSE           
231  57:Token: 27: WRINT           WRINT          
232  57:Token: 47: LEFT_PAREN      (              
233  57:Token: 35: ID              m              
234  57:Token: 53: RIGHT_PAREN     )              
235  57:Token: 54: SEMI_COLON      ;              
236  58:Token: 28: WRLN            WRLN           
237  58:Token: 54: SEMI_COLON      ;              
238  59:Token: 9 : END             END            
239  59:Token: 54: SEMI_COLON      ;              
240  61:Token: 34: WRSTR           WRSTR          
241  61:Token: 47: LEFT_PAREN      (              
242  61:Token: 39: STRING          IF test:             should be 17:          
243  61:Token: 53: RIGHT_PAREN     )              
244  61:Token: 54: SEMI_COLON      ;              
245  62:Token: 35: ID              k              
246  62:Token: 40: ASSIGN          :=             
247  62:Token: 38: INT_NUM         4              
248  62:Token: 54: SEMI_COLON      ;              
249  63:Token: 35: ID              m              
250  63:Token: 40: ASSIGN          :=             
251  63:Token: 38: INT_NUM         17             
252  63:Token: 54: SEMI_COLON      ;              
253  64:Token: 12: IF              IF             
254  64:Token: 35: ID              k              
255  64:Token: 56: GRTR_THAN       >              
256  64:Token: 35: ID              m              
257  64:Token: 22: THEN            THEN           
258  65:Token: 27: WRINT           WRINT          
259  65:Token: 47: LEFT_PAREN      (              
260  65:Token: 35: ID              k              
261  65:Token: 53: RIGHT_PAREN     )              
262  65:Token: 54: SEMI_COLON      ;              
263  66:Token: 28: WRLN            WRLN           
264  66:Token: 54: SEMI_COLON      ;              
265  67:Token: 8 : ELSE            ELSE           
266  68:Token: 27: WRINT           WRINT          
267  68:Token: 47: LEFT_PAREN      (              
268  68:Token: 35: ID              m              
269  68:Token: 53: RIGHT_PAREN     )              
270  68:Token: 54: SEMI_COLON      ;              
271  69:Token: 28: WRLN            WRLN           
272  69:Token: 54: SEMI_COLON      ;              
273  70:Token: 9 : END             END            
274  70:Token: 54: SEMI_COLON      ;              
275  72:Token: 34: WRSTR           WRSTR          
276  72:Token: 47: LEFT_PAREN      (              
277  72:Token: 39: STRING          IF test:             should be 71:          
278  72:Token: 53: RIGHT_PAREN     )              
279  72:Token: 54: SEMI_COLON      ;              
280  73:Token: 35: ID              k              
281  73:Token: 40: ASSIGN          :=             
282  73:Token: 38: INT_NUM         4              
283  73:Token: 54: SEMI_COLON      ;              
284  74:Token: 35: ID              m              
285  74:Token: 40: ASSIGN          :=             
286  74:Token: 38: INT_NUM         71             
287  74:Token: 54: SEMI_COLON      ;              
288  75:Token: 12: IF              IF             
289  75:Token: 35: ID              k              
290  75:Token: 56: GRTR_THAN       >              
291  75:Token: 35: ID              m              
292  75:Token: 22: THEN            THEN           
293  76:Token: 27: WRINT           WRINT          
294  76:Token: 47: LEFT_PAREN      (              
295  76:Token: 35: ID              k              
296  76:Token: 53: RIGHT_PAREN     )              
297  76:Token: 54: SEMI_COLON      ;              
298  77:Token: 28: WRLN            WRLN           
299  77:Token: 54: SEMI_COLON      ;              
300  78:Token: 8 : ELSE            ELSE           
301  80:Token: 12: IF              IF             
302  80:Token: 47: LEFT_PAREN      (              
303  80:Token: 35: ID              m              
304  80:Token: 59: LESS_THAN_EQ    <=             
305  80:Token: 38: INT_NUM         71             
306  80:Token: 53: RIGHT_PAREN     )              
307  80:Token: 22: THEN            THEN           
308  81:Token: 27: WRINT           WRINT          
309  81:Token: 47: LEFT_PAREN      (              
310  81:Token: 35: ID              m              
311  81:Token: 53: RIGHT_PAREN     )              
312  81:Token: 54: SEMI_COLON      ;              
313  82:Token: 28: WRLN            WRLN           
314  82:Token: 54: SEMI_COLON      ;              
315  83:Token: 8 : ELSE            ELSE           
316  84:Token: 27: WRINT           WRINT          
317  84:Token: 47: LEFT_PAREN      (              
318  84:Token: 35: ID              m              
319  84:Token: 49: MULT            *              
320  84:Token: 38: INT_NUM         10000          
321  84:Token: 53: RIGHT_PAREN     )              
322  84:Token: 54: SEMI_COLON      ;              
323  85:Token: 28: WRLN            WRLN           
324  85:Token: 54: SEMI_COLON      ;              
325  86:Token: 9 : END             END            
326  86:Token: 54: SEMI_COLON      ;              
327  87:Token: 9 : END             END            
328  87:Token: 54: SEMI_COLON      ;              
329  89:Token: 28: WRLN            WRLN           
330  89:Token: 54: SEMI_COLON      ;              
331  91:Token: 34: WRSTR           WRSTR          
332  91:Token: 47: LEFT_PAREN      (              
333  91:Token: 39: STRING          AND test:            should be 21:          
334  91:Token: 53: RIGHT_PAREN     )              
335  91:Token: 54: SEMI_COLON      ;              
336  92:Token: 35: ID              k              
337  92:Token: 40: ASSIGN          :=             
338  92:Token: 38: INT_NUM         4              
339  92:Token: 54: SEMI_COLON      ;              
340  93:Token: 35: ID              m              
341  93:Token: 40: ASSIGN          :=             
342  93:Token: 38: INT_NUM         71             
343  93:Token: 54: SEMI_COLON      ;              
344  94:Token: 12: IF              IF             
345  94:Token: 47: LEFT_PAREN      (              
346  94:Token: 35: ID              k              
347  94:Token: 58: LESS_THAN       <              
348  94:Token: 35: ID              m              
349  94:Token: 53: RIGHT_PAREN     )              
350  94:Token: 1 : AND             AND            
351  94:Token: 47: LEFT_PAREN      (              
352  94:Token: 47: LEFT_PAREN      (              
353  94:Token: 35: ID              k              
354  94:Token: 49: MULT            *              
355  94:Token: 35: ID              m              
356  94:Token: 53: RIGHT_PAREN     )              
357  94:Token: 57: GRTR_THAN_EQ    >=             
358  94:Token: 47: LEFT_PAREN      (              
359  94:Token: 35: ID              k              
360  94:Token: 49: MULT            *              
361  94:Token: 35: ID              m              
362  94:Token: 48: MINUS           -              
363  94:Token: 38: INT_NUM         1              
364  94:Token: 53: RIGHT_PAREN     )              
365  94:Token: 53: RIGHT_PAREN     )              
366  94:Token: 22: THEN            THEN           
367  95:Token: 27: WRINT           WRINT          
368  95:Token: 47: LEFT_PAREN      (              
369  95:Token: 38: INT_NUM         21             
370  95:Token: 53: RIGHT_PAREN     )              
371  95:Token: 54: SEMI_COLON      ;              
372  96:Token: 28: WRLN            WRLN           
373  96:Token: 54: SEMI_COLON      ;              
374  97:Token: 8 : ELSE            ELSE           
375  99:Token: 12: IF              IF             
376  99:Token: 35: ID              m              
377  99:Token: 59: LESS_THAN_EQ    <=             
378  99:Token: 38: INT_NUM         71             
379  99:Token: 22: THEN            THEN           
380 100:Token: 27: WRINT           WRINT          
381 100:Token: 47: LEFT_PAREN      (              
382 100:Token: 35: ID              m              
383 100:Token: 53: RIGHT_PAREN     )              
384 100:Token: 54: SEMI_COLON      ;              
385 101:Token: 28: WRLN            WRLN           
386 101:Token: 54: SEMI_COLON      ;              
387 102:Token: 8 : ELSE            ELSE           
388 103:Token: 27: WRINT           WRINT          
389 103:Token: 47: LEFT_PAREN      (              
390 103:Token: 35: ID              m              
391 103:Token: 49: MULT            *              
392 103:Token: 38: INT_NUM         10000          
393 103:Token: 53: RIGHT_PAREN     )              
394 103:Token: 54: SEMI_COLON      ;              
395 104:Token: 28: WRLN            WRLN           
396 104:Token: 54: SEMI_COLON      ;              
397 105:Token: 9 : END             END            
398 105:Token: 54: SEMI_COLON      ;              
399 106:Token: 9 : END             END            
400 106:Token: 54: SEMI_COLON      ;              
401 108:Token: 34: WRSTR           WRSTR          
402 108:Token: 47: LEFT_PAREN      (              
403 108:Token: 39: STRING          AND test:            should be 22:          
404 108:Token: 53: RIGHT_PAREN     )              
405 108:Token: 54: SEMI_COLON      ;              
406 109:Token: 35: ID              k              
407 109:Token: 40: ASSIGN          :=             
408 109:Token: 38: INT_NUM         4              
409 109:Token: 54: SEMI_COLON      ;              
410 110:Token: 35: ID              m              
411 110:Token: 40: ASSIGN          :=             
412 110:Token: 38: INT_NUM         71             
413 110:Token: 54: SEMI_COLON      ;              
414 111:Token: 12: IF              IF             
415 111:Token: 47: LEFT_PAREN      (              
416 111:Token: 35: ID              m              
417 111:Token: 56: GRTR_THAN       >              
418 111:Token: 35: ID              k              
419 111:Token: 53: RIGHT_PAREN     )              
420 111:Token: 1 : AND             AND            
421 111:Token: 47: LEFT_PAREN      (              
422 111:Token: 47: LEFT_PAREN      (              
423 111:Token: 35: ID              k              
424 111:Token: 49: MULT            *              
425 111:Token: 35: ID              m              
426 111:Token: 53: RIGHT_PAREN     )              
427 111:Token: 57: GRTR_THAN_EQ    >=             
428 111:Token: 47: LEFT_PAREN      (              
429 111:Token: 35: ID              k              
430 111:Token: 49: MULT            *              
431 111:Token: 35: ID              m              
432 111:Token: 48: MINUS           -              
433 111:Token: 38: INT_NUM         1              
434 111:Token: 53: RIGHT_PAREN     )              
435 111:Token: 53: RIGHT_PAREN     )              
436 111:Token: 22: THEN            THEN           
437 112:Token: 27: WRINT           WRINT          
438 112:Token: 47: LEFT_PAREN      (              
439 112:Token: 38: INT_NUM         22             
440 112:Token: 53: RIGHT_PAREN     )              
441 112:Token: 54: SEMI_COLON      ;              
442 113:Token: 28: WRLN            WRLN           
443 113:Token: 54: SEMI_COLON      ;              
444 114:Token: 8 : ELSE            ELSE           
445 116:Token: 12: IF              IF             
446 116:Token: 47: LEFT_PAREN      (              
447 116:Token: 35: ID              m              
448 116:Token: 59: LESS_THAN_EQ    <=             
449 116:Token: 38: INT_NUM         71             
450 116:Token: 53: RIGHT_PAREN     )              
451 116:Token: 22: THEN            THEN           
452 117:Token: 27: WRINT           WRINT          
453 117:Token: 47: LEFT_PAREN      (              
454 117:Token: 35: ID              m              
455 117:Token: 53: RIGHT_PAREN     )              
456 117:Token: 54: SEMI_COLON      ;              
457 118:Token: 28: WRLN            WRLN           
458 118:Token: 54: SEMI_COLON      ;              
459 119:Token: 8 : ELSE            ELSE           
460 120:Token: 27: WRINT           WRINT          
461 120:Token: 47: LEFT_PAREN      (              
462 120:Token: 35: ID              m              
463 120:Token: 49: MULT            *              
464 120:Token: 38: INT_NUM         10000          
465 120:Token: 53: RIGHT_PAREN     )              
466 120:Token: 54: SEMI_COLON      ;              
467 121:Token: 28: WRLN            WRLN           
468 121:Token: 54: SEMI_COLON      ;              
469 122:Token: 9 : END             END            
470 122:Token: 54: SEMI_COLON      ;              
471 123:Token: 9 : END             END            
472 123:Token: 54: SEMI_COLON      ;              
473 125:Token: 28: WRLN            WRLN           
474 125:Token: 54: SEMI_COLON      ;              
475 127:Token: 34: WRSTR           WRSTR          
476 127:Token: 47: LEFT_PAREN      (              
477 127:Token: 39: STRING          OR test:             should be 23:          
478 127:Token: 53: RIGHT_PAREN     )              
479 127:Token: 54: SEMI_COLON      ;              
480 128:Token: 35: ID              k              
481 128:Token: 40: ASSIGN          :=             
482 128:Token: 38: INT_NUM         4              
483 128:Token: 54: SEMI_COLON      ;              
484 129:Token: 35: ID              m              
485 129:Token: 40: ASSIGN          :=             
486 129:Token: 38: INT_NUM         71             
487 129:Token: 54: SEMI_COLON      ;              
488 130:Token: 12: IF              IF             
489 130:Token: 47: LEFT_PAREN      (              
490 130:Token: 35: ID              k              
491 130:Token: 56: GRTR_THAN       >              
492 130:Token: 35: ID              k              
493 130:Token: 53: RIGHT_PAREN     )              
494 130:Token: 19: OR              OR             
495 130:Token: 47: LEFT_PAREN      (              
496 130:Token: 38: INT_NUM         10             
497 130:Token: 50: NOT_EQ          <>             
498 130:Token: 38: INT_NUM         10             
499 130:Token: 53: RIGHT_PAREN     )              
500 130:Token: 22: THEN            THEN           
501 131:Token: 27: WRINT           WRINT          
502 131:Token: 47: LEFT_PAREN      (              
503 131:Token: 38: INT_NUM         1111           
504 131:Token: 53: RIGHT_PAREN     )              
505 131:Token: 54: SEMI_COLON      ;              
506 132:Token: 28: WRLN            WRLN           
507 132:Token: 54: SEMI_COLON      ;              
508 133:Token: 8 : ELSE            ELSE           
509 134:Token: 12: IF              IF             
510 134:Token: 47: LEFT_PAREN      (              
511 134:Token: 35: ID              m              
512 134:Token: 59: LESS_THAN_EQ    <=             
513 134:Token: 38: INT_NUM         71             
514 134:Token: 53: RIGHT_PAREN     )              
515 134:Token: 22: THEN            THEN           
516 135:Token: 27: WRINT           WRINT          
517 135:Token: 47: LEFT_PAREN      (              
518 135:Token: 38: INT_NUM         23             
519 135:Token: 53: RIGHT_PAREN     )              
520 135:Token: 54: SEMI_COLON      ;              
521 136:Token: 28: WRLN            WRLN           
522 136:Token: 54: SEMI_COLON      ;              
523 137:Token: 8 : ELSE            ELSE           
524 138:Token: 27: WRINT           WRINT          
525 138:Token: 47: LEFT_PAREN      (              
526 138:Token: 35: ID              m              
527 138:Token: 49: MULT            *              
528 138:Token: 38: INT_NUM         10000          
529 138:Token: 53: RIGHT_PAREN     )              
530 138:Token: 54: SEMI_COLON      ;              
531 139:Token: 28: WRLN            WRLN           
532 139:Token: 54: SEMI_COLON      ;              
533 140:Token: 9 : END             END            
534 140:Token: 54: SEMI_COLON      ;              
535 141:Token: 9 : END             END            
536 141:Token: 54: SEMI_COLON      ;              
537 143:Token: 34: WRSTR           WRSTR          
538 143:Token: 47: LEFT_PAREN      (              
539 143:Token: 39: STRING          OR test:             should be 24:          
540 143:Token: 53: RIGHT_PAREN     )              
541 143:Token: 54: SEMI_COLON      ;              
542 144:Token: 12: IF              IF             
543 144:Token: 47: LEFT_PAREN      (              
544 144:Token: 38: INT_NUM         5              
545 144:Token: 56: GRTR_THAN       >              
546 144:Token: 38: INT_NUM         3              
547 144:Token: 53: RIGHT_PAREN     )              
548 144:Token: 19: OR              OR             
549 144:Token: 47: LEFT_PAREN      (              
550 144:Token: 35: ID              k              
551 144:Token: 49: MULT            *              
552 144:Token: 35: ID              m              
553 144:Token: 45: EQUAL           =              
554 144:Token: 47: LEFT_PAREN      (              
555 144:Token: 35: ID              k              
556 144:Token: 49: MULT            *              
557 144:Token: 35: ID              m              
558 144:Token: 48: MINUS           -              
559 144:Token: 38: INT_NUM         1              
560 144:Token: 53: RIGHT_PAREN     )              
561 144:Token: 53: RIGHT_PAREN     )              
562 144:Token: 22: THEN            THEN           
563 145:Token: 27: WRINT           WRINT          
564 145:Token: 47: LEFT_PAREN      (              
565 145:Token: 38: INT_NUM         24             
566 145:Token: 53: RIGHT_PAREN     )              
567 145:Token: 54: SEMI_COLON      ;              
568 145:Token: 28: WRLN            WRLN           
569 145:Token: 54: SEMI_COLON      ;              
570 145:Token: 9 : END             END            
571 145:Token: 54: SEMI_COLON      ;              
572 147:Token: 34: WRSTR           WRSTR          
573 147:Token: 47: LEFT_PAREN      (              
574 147:Token: 39: STRING          OR AND test:         should be 25:          
575 147:Token: 53: RIGHT_PAREN     )              
576 147:Token: 54: SEMI_COLON      ;              
577 148:Token: 12: IF              IF             
578 148:Token: 47: LEFT_PAREN      (              
579 148:Token: 38: INT_NUM         5              
580 148:Token: 58: LESS_THAN       <              
581 148:Token: 38: INT_NUM         3              
582 148:Token: 53: RIGHT_PAREN     )              
583 148:Token: 19: OR              OR             
584 148:Token: 47: LEFT_PAREN      (              
585 148:Token: 35: ID              k              
586 148:Token: 49: MULT            *              
587 148:Token: 35: ID              m              
588 148:Token: 50: NOT_EQ          <>             
589 148:Token: 47: LEFT_PAREN      (              
590 148:Token: 35: ID              k              
591 148:Token: 49: MULT            *              
592 148:Token: 35: ID              m              
593 148:Token: 48: MINUS           -              
594 148:Token: 38: INT_NUM         1              
595 148:Token: 53: RIGHT_PAREN     )              
596 148:Token: 53: RIGHT_PAREN     )              
597 148:Token: 1 : AND             AND            
598 148:Token: 47: LEFT_PAREN      (              
599 148:Token: 38: INT_NUM         2              
600 148:Token: 45: EQUAL           =              
601 148:Token: 38: INT_NUM         2              
602 148:Token: 53: RIGHT_PAREN     )              
603 148:Token: 22: THEN            THEN           
604 149:Token: 27: WRINT           WRINT          
605 149:Token: 47: LEFT_PAREN      (              
606 149:Token: 38: INT_NUM         25             
607 149:Token: 53: RIGHT_PAREN     )              
608 149:Token: 54: SEMI_COLON      ;              
609 149:Token: 28: WRLN            WRLN           
610 149:Token: 54: SEMI_COLON      ;              
611 149:Token: 9 : END             END            
612 149:Token: 54: SEMI_COLON      ;              
613 151:Token: 28: WRLN            WRLN           
614 151:Token: 54: SEMI_COLON      ;              
615 153:Token: 34: WRSTR           WRSTR          
616 153:Token: 47: LEFT_PAREN      (              
617 153:Token: 39: STRING          LOOP test:           should be 1-9:        
618 153:Token: 53: RIGHT_PAREN     )              
619 153:Token: 54: SEMI_COLON      ;              
620 153:Token: 28: WRLN            WRLN           
621 153:Token: 54: SEMI_COLON      ;              
622 154:Token: 35: ID              k              
623 154:Token: 40: ASSIGN          :=             
624 154:Token: 38: INT_NUM         10             
625 154:Token: 54: SEMI_COLON      ;              
626 155:Token: 35: ID              m              
627 155:Token: 40: ASSIGN          :=             
628 155:Token: 38: INT_NUM         1              
629 155:Token: 54: SEMI_COLON      ;              
630 156:Token: 14: LOOP            LOOP           
631 157:Token: 12: IF              IF             
632 157:Token: 35: ID              m              
633 157:Token: 45: EQUAL           =              
634 157:Token: 35: ID              k              
635 157:Token: 22: THEN            THEN           
636 157:Token: 10: EXIT            EXIT           
637 157:Token: 54: SEMI_COLON      ;              
638 157:Token: 9 : END             END            
639 157:Token: 54: SEMI_COLON      ;              
640 158:Token: 27: WRINT           WRINT          
641 158:Token: 47: LEFT_PAREN      (              
642 158:Token: 35: ID              m              
643 158:Token: 53: RIGHT_PAREN     )              
644 158:Token: 54: SEMI_COLON      ;              
645 159:Token: 28: WRLN            WRLN           
646 159:Token: 54: SEMI_COLON      ;              
647 160:Token: 35: ID              m              
648 160:Token: 40: ASSIGN          :=             
649 160:Token: 35: ID              m              
650 160:Token: 51: PLUS            +              
651 160:Token: 38: INT_NUM         1              
652 160:Token: 54: SEMI_COLON      ;              
653 161:Token: 9 : END             END            
654 161:Token: 54: SEMI_COLON      ;              
655 162:Token: 28: WRLN            WRLN           
656 162:Token: 54: SEMI_COLON      ;              
657 164:Token: 34: WRSTR           WRSTR          
658 164:Token: 47: LEFT_PAREN      (              
659 164:Token: 39: STRING          LOOP test:           should be nice:       
660 164:Token: 53: RIGHT_PAREN     )              
661 164:Token: 54: SEMI_COLON      ;              
662 164:Token: 28: WRLN            WRLN           
663 164:Token: 54: SEMI_COLON      ;              
664 165:Token: 35: ID              k              
665 165:Token: 40: ASSIGN          :=             
666 165:Token: 38: INT_NUM         10             
667 165:Token: 54: SEMI_COLON      ;              
668 166:Token: 35: ID              m              
669 166:Token: 40: ASSIGN          :=             
670 166:Token: 38: INT_NUM         1              
671 166:Token: 54: SEMI_COLON      ;              
672 167:Token: 14: LOOP            LOOP           
673 168:Token: 12: IF              IF             
674 168:Token: 35: ID              m              
675 168:Token: 45: EQUAL           =              
676 168:Token: 35: ID              k              
677 168:Token: 22: THEN            THEN           
678 168:Token: 10: EXIT            EXIT           
679 168:Token: 54: SEMI_COLON      ;              
680 168:Token: 9 : END             END            
681 168:Token: 54: SEMI_COLON      ;              
682 170:Token: 35: ID              good           
683 170:Token: 40: ASSIGN          :=             
684 170:Token: 38: INT_NUM         1              
685 170:Token: 54: SEMI_COLON      ;              
686 171:Token: 14: LOOP            LOOP           
687 172:Token: 34: WRSTR           WRSTR          
688 172:Token: 47: LEFT_PAREN      (              
689 172:Token: 39: STRING          @              
690 172:Token: 53: RIGHT_PAREN     )              
691 172:Token: 54: SEMI_COLON      ;              
692 173:Token: 12: IF              IF             
693 173:Token: 35: ID              good           
694 173:Token: 45: EQUAL           =              
695 173:Token: 35: ID              m              
696 173:Token: 22: THEN            THEN           
697 173:Token: 10: EXIT            EXIT           
698 173:Token: 54: SEMI_COLON      ;              
699 173:Token: 9 : END             END            
700 173:Token: 54: SEMI_COLON      ;              
701 174:Token: 35: ID              good           
702 174:Token: 40: ASSIGN          :=             
703 174:Token: 35: ID              good           
704 174:Token: 51: PLUS            +              
705 174:Token: 38: INT_NUM         1              
706 174:Token: 54: SEMI_COLON      ;              
707 175:Token: 9 : END             END            
708 175:Token: 54: SEMI_COLON      ;              
709 177:Token: 28: WRLN            WRLN           
710 177:Token: 54: SEMI_COLON      ;              
711 178:Token: 35: ID              m              
712 178:Token: 40: ASSIGN          :=             
713 178:Token: 35: ID              m              
714 178:Token: 51: PLUS            +              
715 178:Token: 38: INT_NUM         1              
716 178:Token: 54: SEMI_COLON      ;              
717 179:Token: 9 : END             END            
718 179:Token: 54: SEMI_COLON      ;              
719 180:Token: 28: WRLN            WRLN           
720 180:Token: 54: SEMI_COLON      ;              
721 182:Token: 9 : END             END            
722 182:Token: 35: ID              LoopIf         
723 182:Token: 43: DOT             .              
724 183:Token: 62: EOF             End Of File    
