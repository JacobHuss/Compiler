TokenList:

 TK  Ln Type                      Lexeme         

  0   1:Token: 16: MODULE          MODULE         
  1   1:Token: 35: ID              Square         
  2   1:Token: 54: SEMI_COLON      ;              
  3   3:Token: 23: TYPE            TYPE           
  4   4:Token: 35: ID              ListType       
  5   4:Token: 45: EQUAL           =              
  6   4:Token: 2 : ARRAY           ARRAY          
  7   4:Token: 46: LEFT_BRACK      [              
  8   4:Token: 38: INT_NUM         11             
  9   4:Token: 44: DOT_DOT         ..             
 10   4:Token: 38: INT_NUM         30             
 11   4:Token: 52: RIGHT_BRACK     ]              
 12   4:Token: 18: OF              OF             
 13   4:Token: 13: INTEGER         INTEGER        
 14   4:Token: 54: SEMI_COLON      ;              
 15   6:Token: 24: VAR             VAR            
 16   7:Token: 35: ID              aiSquares      
 17   8:Token: 41: COLON           :              
 18   8:Token: 35: ID              ListType       
 19   8:Token: 54: SEMI_COLON      ;              
 20  10:Token: 35: ID              index          
 21  11:Token: 41: COLON           :              
 22  11:Token: 13: INTEGER         INTEGER        
 23  11:Token: 54: SEMI_COLON      ;              
 24  13:Token: 3 : BEGIN           BEGIN          
 25  16:Token: 35: ID              index          
 26  16:Token: 40: ASSIGN          :=             
 27  16:Token: 38: INT_NUM         11             
 28  16:Token: 54: SEMI_COLON      ;              
 29  17:Token: 14: LOOP            LOOP           
 30  18:Token: 12: IF              IF             
 31  18:Token: 35: ID              index          
 32  18:Token: 56: GRTR_THAN       >              
 33  18:Token: 38: INT_NUM         30             
 34  18:Token: 22: THEN            THEN           
 35  18:Token: 10: EXIT            EXIT           
 36  18:Token: 54: SEMI_COLON      ;              
 37  18:Token: 9 : END             END            
 38  18:Token: 54: SEMI_COLON      ;              
 39  19:Token: 35: ID              aiSquares      
 40  19:Token: 46: LEFT_BRACK      [              
 41  19:Token: 35: ID              index          
 42  19:Token: 52: RIGHT_BRACK     ]              
 43  19:Token: 40: ASSIGN          :=             
 44  19:Token: 35: ID              index          
 45  19:Token: 49: MULT            *              
 46  19:Token: 35: ID              index          
 47  19:Token: 54: SEMI_COLON      ;              
 48  20:Token: 35: ID              index          
 49  20:Token: 40: ASSIGN          :=             
 50  20:Token: 35: ID              index          
 51  20:Token: 51: PLUS            +              
 52  20:Token: 38: INT_NUM         1              
 53  20:Token: 54: SEMI_COLON      ;              
 54  21:Token: 9 : END             END            
 55  21:Token: 54: SEMI_COLON      ;              
 56  24:Token: 35: ID              index          
 57  24:Token: 40: ASSIGN          :=             
 58  24:Token: 38: INT_NUM         11             
 59  24:Token: 54: SEMI_COLON      ;              
 60  25:Token: 14: LOOP            LOOP           
 61  26:Token: 12: IF              IF             
 62  26:Token: 35: ID              index          
 63  26:Token: 56: GRTR_THAN       >              
 64  26:Token: 38: INT_NUM         30             
 65  26:Token: 22: THEN            THEN           
 66  26:Token: 10: EXIT            EXIT           
 67  26:Token: 54: SEMI_COLON      ;              
 68  26:Token: 9 : END             END            
 69  26:Token: 54: SEMI_COLON      ;              
 70  27:Token: 27: WRINT           WRINT          
 71  27:Token: 47: LEFT_PAREN      (              
 72  27:Token: 35: ID              index          
 73  27:Token: 53: RIGHT_PAREN     )              
 74  27:Token: 54: SEMI_COLON      ;              
 75  28:Token: 34: WRSTR           WRSTR          
 76  28:Token: 47: LEFT_PAREN      (              
 77  28:Token: 39: STRING           squared is    
 78  28:Token: 53: RIGHT_PAREN     )              
 79  28:Token: 54: SEMI_COLON      ;              
 80  29:Token: 27: WRINT           WRINT          
 81  29:Token: 47: LEFT_PAREN      (              
 82  29:Token: 35: ID              aiSquares      
 83  29:Token: 46: LEFT_BRACK      [              
 84  29:Token: 35: ID              index          
 85  29:Token: 52: RIGHT_BRACK     ]              
 86  29:Token: 53: RIGHT_PAREN     )              
 87  29:Token: 54: SEMI_COLON      ;              
 88  30:Token: 34: WRSTR           WRSTR          
 89  30:Token: 47: LEFT_PAREN      (              
 90  30:Token: 39: STRING          .              
 91  30:Token: 53: RIGHT_PAREN     )              
 92  30:Token: 54: SEMI_COLON      ;              
 93  31:Token: 28: WRLN            WRLN           
 94  31:Token: 54: SEMI_COLON      ;              
 95  32:Token: 35: ID              index          
 96  32:Token: 40: ASSIGN          :=             
 97  32:Token: 35: ID              index          
 98  32:Token: 51: PLUS            +              
 99  32:Token: 38: INT_NUM         1              
100  32:Token: 54: SEMI_COLON      ;              
101  33:Token: 9 : END             END            
102  33:Token: 54: SEMI_COLON      ;              
103  35:Token: 9 : END             END            
104  35:Token: 35: ID              Square         
105  35:Token: 43: DOT             .              
106  36:Token: 62: EOF             End Of File    
